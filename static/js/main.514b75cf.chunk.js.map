{"version":3,"sources":["styles/NavBarStyles.js","hooks/useToggleState.js","contexts/ThemeContext.jsx","contexts/LanguageContext.jsx","components/NavBar.jsx","styles/LoginFormStyles.js","components/LoginForm.jsx","components/PageContent.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["styles","theme","root","width","grow","flexGrow","menuButton","marginLeft","marginRight","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","spacing","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","useToggleState","initVal","useState","toggle","setToggle","handleToggle","prevState","ThemeContext","createContext","ThemeProvider","props","isDarkMode","toggleIsDarkMode","Provider","value","children","LanguageContext","LanguageProvider","language","setLanguage","setLang","lang","words","english","spanish","french","withStyles","classes","useContext","className","AppBar","Toolbar","IconButton","aria-label","Typography","variant","noWrap","Switch","onClick","InputBase","placeholder","input","paper","marginTop","flexDirection","padding","avatar","margin","secondary","main","form","marinTop","submit","signIn","email","password","remember","CssBaseline","Paper","Avatar","FormControl","Select","labelId","id","e","target","MenuItem","required","fullWidth","InputLabel","htmlFor","Input","name","autoFocus","FormControlLabel","control","Checkbox","label","Button","type","PageContent","style","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.514b75cf.chunk.js","sourcesContent":["import { fade } from \"@material-ui/core/styles/colorManipulator\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    // position:'absolute'\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  title: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(9),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    paddingTop: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n    paddingBottom: theme.spacing(1),\r\n    paddingLeft: theme.spacing(10),\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: 120,\r\n      \"&:focus\": {\r\n        width: 200,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import { useState } from \"react\";\r\n\r\nfunction useToggleState(initVal = false) {\r\n  const [toggle, setToggle] = useState(initVal);\r\n\r\n  const handleToggle = () => {\r\n    setToggle(prevState => !prevState);\r\n  };\r\n\r\n  return [toggle, handleToggle];\r\n}\r\n\r\nexport default useToggleState;\r\n","import React, { createContext } from \"react\";\r\nimport useToggleState from \"../hooks/useToggleState\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport function ThemeProvider(props) {\r\n  const [isDarkMode, toggleIsDarkMode] = useToggleState(true);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDarkMode, toggleIsDarkMode }}>\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const LanguageContext = createContext();\r\n\r\nexport function LanguageProvider(props) {\r\n  const [language, setLanguage] = useState(\"spanish\");\r\n\r\n  const setLang = lang => {\r\n\t\tlang && setLanguage(lang)\r\n\t};\r\n\r\n  return (\r\n    <LanguageContext.Provider value={{ language, setLang }}>\r\n      {props.children}\r\n    </LanguageContext.Provider>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  InputBase,\r\n  Switch,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nimport styles from \"../styles/NavBarStyles\";\r\nimport { ThemeContext } from \"../contexts/ThemeContext\";\r\nimport { LanguageContext } from \"../contexts/LanguageContext\";\r\n\r\nconst words = {\r\n  english: {\r\n    search: \"Search\",\r\n    lang: \"ðŸ‡ºðŸ‡¸\",\r\n  },\r\n  spanish: {\r\n    search: \"Buscar\",\r\n    lang: \"ðŸ‡ªðŸ‡¸\",\r\n  },\r\n  french: {\r\n    search: \"Chercher\",\r\n    lang: \"ðŸ‡«ðŸ‡·\",\r\n  },\r\n};\r\n\r\nfunction NavBar(props) {\r\n  const { classes } = props;\r\n  const { isDarkMode, toggleIsDarkMode } = useContext(ThemeContext);\r\n  const { language } = useContext(LanguageContext);\r\n\r\n  const { search, lang } = words[language];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color={isDarkMode ? \"default\" : \"primary\"}>\r\n        <Toolbar>\r\n          <IconButton\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"Open drawer\"\r\n          >\r\n            <span>{lang}</span>\r\n          </IconButton>\r\n          <Typography\r\n            className={classes.title}\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n          >\r\n            LDC\r\n          </Typography>\r\n          <Switch onClick={toggleIsDarkMode} />\r\n\r\n          <div className={classes.grow} />\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder={`${search}...`}\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(NavBar);\r\n","const styles = theme => ({\r\n  root: {\r\n    width: \"auto\",\r\n    display: \"block\",\r\n    marginLeft: theme.spacing(3),\r\n    marginRight: theme.spacing(3),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: 400,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\r\n      3\r\n    )}px`,\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marinTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n});\r\n\r\nexport default styles;\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CssBaseline,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Input,\r\n  InputLabel,\r\n  Paper,\r\n  Typography,\r\n  MenuItem,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport styles from \"../styles/LoginFormStyles\";\r\nimport { LanguageContext } from \"../contexts/LanguageContext\";\r\n\r\nconst words = {\r\n  english: {\r\n    signIn: \"Sign In\",\r\n    email: \"Email\",\r\n    password: \"Password\",\r\n    remember: \"Remember Me\",\r\n  },\r\n  french: {\r\n    signIn: \"Se Connecter\",\r\n    email: \"Adresse Electronique\",\r\n    password: \"Mot De Passe\",\r\n    remember: \"Souviens-toi De Mot\",\r\n  },\r\n  spanish: {\r\n    signIn: \"Registrarse\",\r\n    email: \"Correo Electronico\",\r\n    password: \"Contrasena\",\r\n    remember: \"Recuerdame\",\r\n  },\r\n};\r\n\r\nfunction LoginForm(props) {\r\n  const { language, setLang } = useContext(LanguageContext);\r\n  const { classes } = props;\r\n  const { email, signIn, password, remember } = words[language];\r\n\r\n  return (\r\n    <main className={classes.root}>\r\n      <CssBaseline />\r\n      <Paper className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography variant=\"h5\">{signIn}</Typography>\r\n        <FormControl>\r\n          <Select\r\n            labelId=\"language\"\r\n            id=\"language\"\r\n            value={language}\r\n            onClick={e => setLang(e.target.value)}\r\n          >\r\n            <MenuItem value=\"english\">English</MenuItem>\r\n            <MenuItem value=\"french\">French</MenuItem>\r\n            <MenuItem value=\"spanish\">Spanish</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <form className={classes.form}>\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"email\">{email}</InputLabel>\r\n            <Input id=\"email\" name=\"email\" autoFocus />\r\n          </FormControl>\r\n          <FormControl margin=\"normal\" required fullWidth>\r\n            <InputLabel htmlFor=\"password\">{password}</InputLabel>\r\n            <Input id=\"password\" name=\"password\" />\r\n          </FormControl>\r\n          <FormControlLabel\r\n            control={<Checkbox color=\"primary\" />}\r\n            label={remember}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n            fullWidth\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            {signIn}\r\n          </Button>\r\n        </form>\r\n      </Paper>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(LoginForm);\r\n","import React, { useContext } from \"react\";\r\nimport { ThemeContext } from \"../contexts/ThemeContext\";\r\n\r\nexport default function PageContent(props) {\r\n  const { isDarkMode } = useContext(ThemeContext);\r\n\r\n  const styles = {\r\n    backgroundColor: isDarkMode ? \"black\" : \"white\",\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n  };\r\n  return <div style={styles}>{props.children}</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nimport NavBar from \"./components/NavBar\";\r\nimport LoginForm from \"./components/LoginForm\";\r\nimport PageContent from \"./components/PageContent\";\r\nimport { ThemeProvider } from \"./contexts/ThemeContext\";\r\nimport { LanguageProvider } from \"./contexts/LanguageContext\";\r\n\r\n\r\nfunction App() {\r\n \r\n  return (\r\n    <LanguageProvider>\r\n      <ThemeProvider>\r\n        <PageContent>\r\n          <NavBar />\r\n          <LoginForm />\r\n        </PageContent>\r\n      </ThemeProvider>\r\n    </LanguageProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./App.jsx\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}